# R for travis: see documentation at https://docs.travis-ci.com/user/languages/r
# Default configuration for use with tic package
# Usually you shouldn't need to change the first part of the file

# DO NOT CHANGE THE CODE BELOW (comment in to rejuvenate use of tic for auto-deployment)
# before_install: R -q -e 'install.packages(c("remotes", "curl")); remotes::install_github("ropenscilabs/tic"); tic::prepare_all_stages(); tic::before_install()'
# install: R -q -e 'tic::install()'
# after_install: R -q -e 'tic::after_install()'
# before_script: R -q -e 'tic::before_script()'
# script: R -q -e 'tic::script()'
# after_success: R -q -e 'tic::after_success()'
# after_failure: R -q -e 'tic::after_failure()'
# before_deploy: R -q -e 'tic::before_deploy()'
# deploy:
#   provider: script
#   script: R -q -e 'tic::deploy()'
#   on:
#     all_branches: true
# after_deploy: R -q -e 'tic::after_deploy()'
# after_script: R -q -e 'tic::after_script()'
# # DO NOT CHANGE THE CODE ABOVE

# Custom parts:

# Header
language: r
cache: packages
latex: false
dist: trusty
sudo: required
before_install:
  - sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable --yes
  - sudo add-apt-repository ppa:opencpu/jq --yes
  - sudo apt-get --yes --force-yes update -qq
  - sudo apt-get install --yes libudunits2-dev libproj-dev libgeos-dev libgdal-dev libv8-dev
  - sudo apt-get install --yes libjq-dev libprotobuf-dev libprotoc-dev protobuf-compiler r-cran-ncdf4

r_packages:
  - rgdal
  - sf
  - devtools
warnings_are_errors: false

#env
env:
  global:
  - _R_CHECK_FORCE_SUGGESTS_=false
  - MAKEFLAGS="-j 2"

#services
services:
